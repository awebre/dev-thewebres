---
layout: posts
title: "Tunneling to Le Potato with Cloudflare"
date: 2022-11-15T22:45:00-6:00
summary: 
  Exposing a potato over the internet, with care.
---

<section>
    <h3 class="text-lg font-bold">I Promise This Is Not an Ad</h3>
    <p>
        Being a developer, I know that exposing devices over the internet is always a risky business.
        Not being well versed in server administration, I have no clue how to securely expose a server 
        on my home network to the internet at large. That's why I turned to <em>Cloudflare</em>,
        a trusted name in the realm of all things internet.
    </p>
    <br/>
    <p>
        In truth, I had recently heard about an offering of there's that allowed you 
        to create secure tunnels to a device, without directly exposing ports to the internet
        at large. Given that this is exaclty what I wanted (a secure, direct connection to my home
        server without making it available to the broader internet), this seemed like the perfect 
        time to try it out.
    </p>
</section>
<section class="mt-8">
    <h3 class="text-lg font-bold">Getting Cloudflared</h3>
    <aside class="mb-2 text-sm italic text-gray-500">Note: this guide assumes you have a Cloudflare account and at least one domain configured with Cloudflare.</aside>
    <p>
        As it turns out, the process for starting up a Cloudflare Tunnel begins with 
        installing a CLI tool, called Cloudflared. The tool is available for a wide range 
        of operating systems and architectures, but for Le Potato, I downloaded the 
        "cloduflared-linux-arm64.deb" package:
    </p>
    <code class="text-white bg-black p-0.5">wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64.deb && dpkg -i cloudflared-linux-arm64.deb</code>
    <br/>
    <br/>
    <p>
        With the Cloudflared CLI installed, it's time to login:
    </p>
    <code class="text-white bg-black p-0.5">cloudflared tunnel login</code>
    <br/>
    <br/>
    <p>
        The result of this command is some text letting you know that a browser window 
        should have opened, prompting you to be logged in. But we're in terminal-only land,
        so that ain't gonna work. This prompt should also include the URL that the browser 
        would have opened to (if it could have). You will need to copy this URL into a browser 
        windo on any other device, and log in to your Cloudflare account.
    </p>
    <br/>
    <p>
        Once you've successfully logged in and selected a domain, the Cloudflared command
        on Le Potato should complete, leaving behind a new directory ".cloudflared". In this 
        directory are some keys that it will need later.
    </p>
    <br/>
    <p>Now it's time to create our tunnel:</p>
    <code class="text-white bg-black p-0.5">cloudflared tunnel create home</code>
    <aside class="text-sm italic text-gray-500">Note: "home" is the name I decided to give my tunnel, you can call it anything you want.</aside>
    <br/>
    <p>
        The result should be a file
        that will look like "home/ubuntu/.cloudflared/~GUID~.json". Make note of this GUID - you'll need it later. 
        (Feel free to copy it to the clipboard, if you can find out how...)
    </p>
    <br/>
    <p>Just to be sure that it worked, you can run:</p>
    <code class="text-white bg-black p-0.5">cloudflared tunnel list</code>
    <br/>
    <br/>
    <p>If all is well, you should see your tunnel's name in the list, along with some other information.</p>
    <br/>
    <p>
        Lastly, you'll need
</section>